{"frozen":{"name":"babashka","shortDescription":"A Clojure babushka for the grey areas of Bash","longDescription":"  The main idea behind babashka is to leverage Clojure in places where you \n  would be using bash otherwise.\n\n  As one user described it:\n\n      I’m quite at home in Bash most of the time, but there’s a substantial \n      grey area of things that are too complicated to be simple in bash, but \n      too simple to be worth writing a clj/s script for. Babashka really \n      seems to hit the sweet spot for those cases.\n\nGoals:\n\n- Low latency Clojure scripting alternative to JVM Clojure.\n- Easy installation: grab the self-contained binary and run. No JVM needed.\n- Familiarity and portability:\n  - Scripts should be compatible with JVM Clojure as much as possible\n  - Scripts should be platform-independent as much as possible. Babashka \n    offers support for linux, macOS and Windows.\n- Allow interop with commonly used classes like java.io.File and System\n- Multi-threading support (pmap, future, core.async)\n- Batteries included (tools.cli, cheshire, ...)\n- Library support via popular tools like the clojure CLI\n","versionString":"0.0.89","homepage":"https://github.com/borkdude/babashka","license":{"fullName":"Eclipse Public License 1.0","shortName":"epl10","spdxId":"EPL-1.0","url":"https://spdx.org/licenses/EPL-1.0.html"},"versionNumberList":[0,0,89]},"flexible":{"sources":[{"git":"https://github.com/NixOS/nixpkgs.git","commit":"05a7b69509f78b4ae9d04fcdf8f57ceb435572fc","attributePath":["babashka"],"position":"/nix/store/7l0a51yav8p04d9l8dd5pmhds7pqvalf-05a7b69509f78b4ae9d04fcdf8f57ceb435572fc.tar.gz/pkgs/development/interpreters/clojure/babashka.nix:54","date":"2020-05-05"}],"platforms":["x86_64-linux","x86_64-darwin"]}}