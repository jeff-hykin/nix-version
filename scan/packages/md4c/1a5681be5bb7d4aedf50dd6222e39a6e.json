{"frozen":{"name":"md4c","shortDescription":"Markdown parser made in C","longDescription":"MD4C is Markdown parser implementation in C, with the following features:\n\n- Compliance: Generally, MD4C aims to be compliant to the latest version\n  of CommonMark specification. Currently, we are fully compliant to\n  CommonMark 0.29.\n- Extensions: MD4C supports some commonly requested and accepted\n  extensions. See below.\n- Performance: MD4C is very fast.\n- Compactness: MD4C parser is implemented in one source file and one\n  header file. There are no dependencies other than standard C library.\n- Embedding: MD4C parser is easy to reuse in other projects, its API is\n  very straightforward: There is actually just one function, md_parse().\n- Push model: MD4C parses the complete document and calls few callback\n  functions provided by the application to inform it about a start/end of\n  every block, a start/end of every span, and with any textual contents.\n- Portability: MD4C builds and works on Windows and POSIX-compliant\n  OSes. (It should be simple to make it run also on most other platforms,\n  at least as long as the platform provides C standard library, including\n  a heap memory management.)\n- Encoding: MD4C by default expects UTF-8 encoding of the input\n  document. But it can be compiled to recognize ASCII-only control\n  characters (i.e. to disable all Unicode-specific code), or (on Windows)\n  to expect UTF-16 (i.e. what is on Windows commonly called just\n  \"Unicode\"). See more details below.\n- Permissive license: MD4C is available under the MIT license.\n","versionString":"0.4.8","homepage":"https://github.com/mity/md4c","license":{"deprecated":false,"free":true,"fullName":"MIT License","redistributable":true,"shortName":"mit","spdxId":"MIT","url":"https://spdx.org/licenses/MIT.html"},"versionNumberList":[0,4,8]},"flexible":{"unfree":false,"insecure":false,"broken":false,"sources":[{"git":"https://github.com/NixOS/nixpkgs.git","commit":"273bcc7a9a6bcf22781c7fb61df01ae8a7c68ec9","attributePath":["md4c"],"position":"/nix/store/wl7qj93w4x4z82izkg41gfxr2y2dw9n1-273bcc7a9a6bcf22781c7fb61df01ae8a7c68ec9.tar.gz/pkgs/development/libraries/md4c/default.nix:33","date":"2021-10-20"},{"git":"https://github.com/NixOS/nixpkgs.git","commit":"1097381d400990a3c9e4732a1a180e71ace9edcc","attributePath":["md4c"],"position":"/nix/store/gqn35g78jqsq87nmdkx9vbhqk3mjd813-1097381d400990a3c9e4732a1a180e71ace9edcc.tar.gz/pkgs/development/libraries/md4c/default.nix:33","date":"2022-01-31"}],"platforms":["i686-cygwin","x86_64-cygwin","x86_64-darwin","i686-darwin","aarch64-darwin","armv7a-darwin","i686-freebsd","x86_64-freebsd","aarch64-genode","i686-genode","x86_64-genode","x86_64-solaris","js-ghcjs","aarch64-linux","armv5tel-linux","armv6l-linux","armv7a-linux","armv7l-linux","i686-linux","m68k-linux","mipsel-linux","powerpc64-linux","powerpc64le-linux","riscv32-linux","riscv64-linux","s390-linux","s390x-linux","x86_64-linux","mmix-mmixware","aarch64-netbsd","armv6l-netbsd","armv7a-netbsd","armv7l-netbsd","i686-netbsd","m68k-netbsd","mipsel-netbsd","powerpc-netbsd","riscv32-netbsd","riscv64-netbsd","x86_64-netbsd","aarch64-none","arm-none","armv6l-none","avr-none","i686-none","msp430-none","or1k-none","m68k-none","powerpc-none","riscv32-none","riscv64-none","s390-none","s390x-none","vc4-none","x86_64-none","i686-openbsd","x86_64-openbsd","x86_64-redox","wasm64-wasi","wasm32-wasi","x86_64-windows","i686-windows"]}}